<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://podman-desktop.io/blog</id>
    <title>Podman Desktop Blog</title>
    <updated>2022-12-01T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://podman-desktop.io/blog"/>
    <subtitle>Podman Desktop Blog</subtitle>
    <icon>https://podman-desktop.io/img/favicon.ico</icon>
    <rights>Copyright © 2022 Podman Desktop</rights>
    <entry>
        <title type="html"><![CDATA[Release Notes - Podman Desktop 0.10]]></title>
        <id>podman-desktop-release-0.10</id>
        <link href="https://podman-desktop.io/blog/podman-desktop-release-0.10"/>
        <updated>2022-12-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Podman Desktop 0.10 has been released! New Create Container Wizard, improved Kubernetes workflows, revamped registries configuration, and more!]]></summary>
        <content type="html"><![CDATA[<p>This release note covers Podman Desktop 0.10 release changes.</p><ul><li><strong>Containers Configuration</strong>: Container creation wizzard allowing to define environment variables, networking and more configuration options.</li><li><strong>Kubernetes Improvements</strong>: Play Kubernetes YAML, custom Kubeconfig path support, reload of kube context.</li><li><strong>Registries Configuration</strong>: Revamped registries configuration UI.</li><li><strong>Podman Version</strong>: Podman 4.3.1 now included in Windows and Mac installers.</li><li><strong>UX/UI Improvements</strong>: Improved lists, better contrast, and more.</li></ul><p>Podman Desktop 0.10 is now available. <a href="/downloads">Click here to download it</a>! </p><hr><h2 class="anchor anchorWithStickyNavbar_JmGV" id="release-details">Release Details<a class="hash-link" href="#release-details" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="new-configuration-wizzard-to-create-containers-773">New configuration wizzard to create containers (<a href="https://github.com/containers/podman-desktop/pull/773" target="_blank" rel="noopener noreferrer">#773</a>)<a class="hash-link" href="#new-configuration-wizzard-to-create-containers-773" title="Direct link to heading">​</a></h3><p>Until now, we could only specify port binding when building images to start containers. The create container wizzard now includes several options enabling configuring volumes, environment variables, restart policy and settings on networking and security. It is also possible to reuse an existing (and already configured) a network when creating containers.</p><p><img loading="lazy" alt="new container creation wizard" src="/assets/images/new_container_creation_wizard-530d6cccba3d06b5c8db1b9e387a31c7.gif" width="800" height="465" class="img_SS3x"></p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="kubernetes-capabilities-improvements">Kubernetes Capabilities Improvements<a class="hash-link" href="#kubernetes-capabilities-improvements" title="Direct link to heading">​</a></h3><p><strong>Custom Kubeconfig file path (<a href="https://github.com/containers/podman-desktop/pull/780" target="_blank" rel="noopener noreferrer">#780</a>)</strong> </p><p>Kubeconfig path location is now configurable from <code>Settings &gt; Preferences &gt; Kubernetes: Kubeconfig</code> and can be set to a custom path. By default, Podman Desktop use the path <code>$HOME/.kube/config</code> for the Kubeconfig file.</p><p><img loading="lazy" alt="custom kubeconfig file path" src="/assets/images/custom-kubeconfig-a1b21477c3bc825c93f8a789292de160.png" width="2324" height="1424" class="img_SS3x"></p><p><strong>Play Kubernetes YAML from the Pods list (<a href="https://github.com/containers/podman-desktop/pull/739" target="_blank" rel="noopener noreferrer">#739</a>)</strong></p><p>Podman Desktop enables to play existing Kubernetes YAML files. This is now available from <code>Play Kubernetes YAML</code> button added to the Pods list, in addition to the Containers list. </p><p><img loading="lazy" alt="play k8s yaml" src="/assets/images/play_k8s_yaml-3f66f50aa7135e66a436b02c1b278dfc.gif" width="800" height="500" class="img_SS3x"></p><p><strong>Kube context automatically reloaded when updated (<a href="https://github.com/containers/podman-desktop/pull/813" target="_blank" rel="noopener noreferrer">#813</a>)</strong></p><p>Any change to the kube context will now be detected by Podman Desktop in its running state. The system tray, allowing to select which Kubernetes environment to work with, will now reload the kube context without restarting Podman Desktop.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="revamped-container-registries-ui-446">Revamped Container Registries UI (<a href="https://github.com/containers/podman-desktop/issues/446" target="_blank" rel="noopener noreferrer">#446</a>)<a class="hash-link" href="#revamped-container-registries-ui-446" title="Direct link to heading">​</a></h3><p>The registries configuration UI has been revamped. Instead of using tiles for displaying the registries, now it uses a list where each registry can be added or edited directly in the list. The kebab menu provides options to edit or remove a registry from the list. </p><p><img loading="lazy" alt="registries" src="/assets/images/registries-1194f05e7d35fe4544c74a513d1dc0ed.png" width="2428" height="1494" class="img_SS3x"></p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="update-to-podman-431-913">Update to Podman 4.3.1 (<a href="https://github.com/containers/podman-desktop/issues/913" target="_blank" rel="noopener noreferrer">#913</a>)<a class="hash-link" href="#update-to-podman-431-913" title="Direct link to heading">​</a></h3><p>Podman Desktop 0.10 is now embedding <a href="https://github.com/containers/podman/releases/tag/v4.3.1" target="_blank" rel="noopener noreferrer">Podman 4.3.1</a> in Windows and macOS installers. </p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="uiux-improvements">UI/UX Improvements<a class="hash-link" href="#uiux-improvements" title="Direct link to heading">​</a></h3><p><strong>Improved lists UX (<a href="https://github.com/containers/podman-desktop/pull/877" target="_blank" rel="noopener noreferrer">#877</a>)</strong></p><p>To reduce the width used in the lists when displaying all the icons, main actions icons are now always displayed (before it was on hover) and the secondary actions are displayed in a kebab menu. For example Start/Stop and delete are primary actions while open the browser, inspect, generate kube yaml, etc. are secondary options.</p><p><img loading="lazy" alt="kebab menu" src="/assets/images/kebab-menu-caf501d63e7e0c8a8e957c55093b0f7b.png" width="2324" height="1424" class="img_SS3x"></p><p><strong>Delay appearance of text in navbar (<a href="https://github.com/containers/podman-desktop/pull/767" target="_blank" rel="noopener noreferrer">#767</a>)</strong></p><p>When minimizing or expanding the navbar, the text was overlapping for a few second the page. Now it's displayed with a fading animation. </p><p><strong>Selected state: better text color contrast (<a href="https://github.com/containers/podman-desktop/pull/802" target="_blank" rel="noopener noreferrer">#802</a>)</strong></p><p>In the <code>Images</code> page, on hover for both the image and the name column, the text contrast has been increased for better visibility: violet indicates that you have selected it.</p><p><img loading="lazy" alt="text color when hover" src="/assets/images/text-color-14e899e089464c8f18a597217045a317.gif" width="800" height="451" class="img_SS3x"></p><p><strong>On Linux and Windows, the menu bar is now hidden by default (<a href="https://github.com/containers/podman-desktop/pull/668" target="_blank" rel="noopener noreferrer">#668</a>)</strong></p><p>With this change, the menu bar looks more integrated to the Operating System. The menu can appear if you hit the <code>Alt</code> key. Thanks to <a href="https://github.com/dylanmtaylor" target="_blank" rel="noopener noreferrer">Dylan M. Taylor</a> for contributing to fix this.</p><p><strong>Exit when clicking on the close icon of the dashboard on Linux (<a href="https://github.com/containers/podman-desktop/pull/671" target="_blank" rel="noopener noreferrer">#671</a>)</strong></p><p>For most users on Linux, there is no tray icon support. In this situation, when closed, Podman Desktop continues to run in background. <a href="https://github.com/dylanmtaylor" target="_blank" rel="noopener noreferrer">Dylan M. Taylor</a> added a property to exit the app by default when clicking on the close icon. For people having tray icon support or with the desire of a different behavior, it is possible to disable it from the Settings.</p><hr><h2 class="anchor anchorWithStickyNavbar_JmGV" id="other-notable-enhancements">Other Notable Enhancements<a class="hash-link" href="#other-notable-enhancements" title="Direct link to heading">​</a></h2><ul><li>Rename <code>Started</code> into <code>Age</code> in Containers list.(<a href="https://github.com/containers/podman-desktop/pull/878" target="_blank" rel="noopener noreferrer">#878</a>)</li><li>Added domain validation when adding a registry. (<a href="https://github.com/containers/podman-desktop/pull/838" target="_blank" rel="noopener noreferrer">#838</a>)</li><li>Provided a consistent behavior with Podman CLI, <code>podman-machine-default</code> is now the default name when creating a Podman machine from Podman Desktop. (<a href="https://github.com/containers/podman-desktop/pull/775" target="_blank" rel="noopener noreferrer">#775</a>)</li></ul><hr><h2 class="anchor anchorWithStickyNavbar_JmGV" id="notable-bug-fixes">Notable bug fixes<a class="hash-link" href="#notable-bug-fixes" title="Direct link to heading">​</a></h2><ul><li>Fixed error handling when pulling images of Desktop Extensions. (<a href="https://github.com/containers/podman-desktop/pull/782" target="_blank" rel="noopener noreferrer">#782</a>)</li><li>Fixed use of the full height of the screen when displaying log in the details of a container. (<a href="https://github.com/containers/podman-desktop/discussions/946" target="_blank" rel="noopener noreferrer">#946</a>)</li><li>Fixed First start of Podman Desktop on flatpak was not seeing the podman engine (<a href="https://github.com/containers/podman-desktop/pull/860" target="_blank" rel="noopener noreferrer">#860</a>)</li></ul><h2 class="anchor anchorWithStickyNavbar_JmGV" id="community-thank-you">Community Thank You!<a class="hash-link" href="#community-thank-you" title="Direct link to heading">​</a></h2><p>🎉 We’d like to say a big thank you to everyone who helped to make Podman Desktop 0.10 even better:</p><ul><li><a href="https://github.com/dylanmtaylor" target="_blank" rel="noopener noreferrer">Dylan M. Taylor</a> in <a href="https://github.com/containers/podman-desktop/pull/671" target="_blank" rel="noopener noreferrer">#671</a></li><li><a href="https://github.com/osslate" target="_blank" rel="noopener noreferrer">Fionn Kelleher</a> in <a href="https://github.com/containers/podman-desktop/pull/713" target="_blank" rel="noopener noreferrer">#713</a></li><li><a href="https://github.com/rsvoboda" target="_blank" rel="noopener noreferrer">Rostislav Svoboda</a> in <a href="https://github.com/containers/podman-desktop/pull/737" target="_blank" rel="noopener noreferrer">#737</a></li><li><a href="https://github.com/shemanaev" target="_blank" rel="noopener noreferrer">Denis Shemanaev</a> in <a href="https://github.com/containers/podman-desktop/pull/783" target="_blank" rel="noopener noreferrer">#783</a></li><li><a href="https://github.com/themr0c" target="_blank" rel="noopener noreferrer">Fabrice Flore-Thébault</a> in <a href="https://github.com/containers/podman-desktop/pull/856" target="_blank" rel="noopener noreferrer">#856</a></li><li><a href="https://github.com/KevinAtSesam" target="_blank" rel="noopener noreferrer">Kevin</a> in <a href="https://github.com/containers/podman-desktop/pull/864" target="_blank" rel="noopener noreferrer">#864</a></li><li><a href="https://github.com/sfrunza13" target="_blank" rel="noopener noreferrer">@sfrunza13</a> in <a href="https://github.com/containers/podman-desktop/pull/872" target="_blank" rel="noopener noreferrer">#872</a></li><li><a href="https://github.com/anjannath" target="_blank" rel="noopener noreferrer">Anjan Nath</a> in <a href="https://github.com/containers/podman-desktop/pull/918" target="_blank" rel="noopener noreferrer">#918</a></li></ul><h2 class="anchor anchorWithStickyNavbar_JmGV" id="final-notes">Final Notes<a class="hash-link" href="#final-notes" title="Direct link to heading">​</a></h2><p>The complete list of issues fixed in this release is available <a href="https://github.com/containers/podman-desktop/issues?q=is%3Aclosed+milestone%3A0.10.0" target="_blank" rel="noopener noreferrer">here</a>.</p><p>Get the latest release from the <a href="/downloads">Downloads</a> section of the website and boost your development journey with Podman Desktop. Additionally, visit the <a href="https://github.com/containers/podman-desktop" target="_blank" rel="noopener noreferrer">GitHub repository</a> and see how you can help us make Podman Desktop better.</p>]]></content>
        <author>
            <name>Dev Kumar</name>
            <uri>https://github.com/deekay2310</uri>
        </author>
        <category label="podman-desktop" term="podman-desktop"/>
        <category label="release" term="release"/>
        <category label="kubernetes" term="kubernetes"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Build & run Podman Desktop in a DevContainer]]></title>
        <id>develop-using-devcontainer</id>
        <link href="https://podman-desktop.io/blog/develop-using-devcontainer"/>
        <updated>2022-11-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Develop Podman Desktop using a DevContainer locally or using GitHub Codespaces.]]></summary>
        <content type="html"><![CDATA[<p>GitHub <a href="https://github.blog/changelog/2022-11-09-codespaces-for-free-and-pro-accounts/" target="_blank" rel="noopener noreferrer">announced last week</a> that Codespaces is available for everyone and it includes free minutes.</p><p>Let see how we can use a <a href="https://containers.dev/" target="_blank" rel="noopener noreferrer">Development Container</a> having all the tools to build and run Podman Desktop. The Development Container works locally using Visual Studio Code but in this blog post we will see how it works directly with a simple click from GitHub.</p><p>The challenges are to run a desktop tool (Podman Desktop) and running a container engine (Podman) inside this Development Container without using too many memory !</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="defining-image-of-the-container">Defining image of the container<a class="hash-link" href="#defining-image-of-the-container" title="Direct link to heading">​</a></h2><p>The first thing is in the choice of the image for the container. It is possible to pick-up a default image and add some features but there is no existing feature for Podman at <a href="https://github.com/devcontainers/features/tree/main/src" target="_blank" rel="noopener noreferrer">https://github.com/devcontainers/features/tree/main/src</a> and most of the features are expecting to run on top of Debian/Ubuntu</p><p>If you are not interested in how to setup the image, jump to the <a href="#configure-the-devcontainer-using-devcontainerjson">next section</a>.</p><p>Podman binaries are available quickly after the releases for Fedora. I decided then to use <code>Fedora 37</code> as the base image.</p><p>Let start the Containerfile using:</p><div class="language-docker codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-docker codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#F8F8F2"><span class="token instruction keyword" style="color:rgb(189, 147, 249);font-style:italic">FROM</span><span class="token instruction"> quay.io/fedora/fedora:37</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then I install Node.js 16 from official nodejs.org repository. It's easier to switch to the version that we need.</p><div class="language-docker codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-docker codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># install Node.js + yarn</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token instruction keyword" style="color:rgb(189, 147, 249);font-style:italic">ENV</span><span class="token instruction"> NODE_VERSION 16.18.1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token instruction keyword" style="color:rgb(189, 147, 249);font-style:italic">RUN</span><span class="token instruction"> curl -SLO </span><span class="token instruction string" style="color:rgb(255, 121, 198)">"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"</span><span class="token instruction"> &amp;&amp; </span><span class="token instruction operator">\</span><span class="token instruction"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token instruction">    tar -xzf </span><span class="token instruction string" style="color:rgb(255, 121, 198)">"node-v$NODE_VERSION-linux-x64.tar.gz"</span><span class="token instruction"> -C /usr/local --strip-components=1 &amp;&amp; </span><span class="token instruction operator">\</span><span class="token instruction"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token instruction">    rm </span><span class="token instruction string" style="color:rgb(255, 121, 198)">"node-v$NODE_VERSION-linux-x64.tar.gz"</span><span class="token instruction"> &amp;&amp; </span><span class="token instruction operator">\</span><span class="token instruction"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token instruction">    npm install -g yarn</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now, all system dependencies used to run an Electron application needs to be installed.</p><p>Podman is also installed so we can run some containers inside this container.</p><p>And of course, we need to install VNC (I choose <a href="https://tigervnc.org/" target="_blank" rel="noopener noreferrer">tigervnc</a>) with a light Window Manager (<a href="http://fluxbox.org/" target="_blank" rel="noopener noreferrer">fluxbox</a>).</p><p>To connect to the display of the container, we need to expose VNC over HTML/websocket using <a href="https://novnc.com/" target="_blank" rel="noopener noreferrer">noVNC</a></p><p>xterm is installed to start a terminal from the VNC side.</p><div class="language-docker codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-docker codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#F8F8F2"><span class="token instruction keyword" style="color:rgb(189, 147, 249);font-style:italic">RUN</span><span class="token instruction"> dnf -y update &amp;&amp; </span><span class="token instruction operator">\</span><span class="token instruction"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token instruction">    yum -y reinstall shadow-utils &amp;&amp; </span><span class="token instruction operator">\</span><span class="token instruction"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token instruction">    yum install -y git </span><span class="token instruction operator">\</span><span class="token instruction"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token instruction">                   </span><span class="token instruction comment" style="color:rgb(98, 114, 164)"># dependencies for Podman Desktop</span><span class="token instruction"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token instruction">                   nss </span><span class="token instruction operator">\</span><span class="token instruction"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token instruction">                   atk </span><span class="token instruction operator">\</span><span class="token instruction"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token instruction">                   at-spi2-atk </span><span class="token instruction operator">\</span><span class="token instruction"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token instruction">                   cups-libs </span><span class="token instruction operator">\</span><span class="token instruction"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token instruction">                   gtk3 </span><span class="token instruction operator">\</span><span class="token instruction"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token instruction">                   </span><span class="token instruction comment" style="color:rgb(98, 114, 164)"># for remote Display</span><span class="token instruction"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token instruction">                   fluxbox </span><span class="token instruction operator">\</span><span class="token instruction"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token instruction">                   tigervnc-server </span><span class="token instruction operator">\</span><span class="token instruction"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token instruction">                   xorg-x11-fonts-Type1 </span><span class="token instruction operator">\</span><span class="token instruction"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token instruction">                   novnc </span><span class="token instruction operator">\</span><span class="token instruction"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token instruction">                   supervisor </span><span class="token instruction operator">\</span><span class="token instruction"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token instruction">                   xdpyinfo </span><span class="token instruction operator">\</span><span class="token instruction"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token instruction">                   </span><span class="token instruction comment" style="color:rgb(98, 114, 164)"># for podman</span><span class="token instruction"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token instruction">                   podman </span><span class="token instruction operator">\</span><span class="token instruction"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token instruction">                   fuse-overlayfs --exclude container-selinux </span><span class="token instruction operator">\</span><span class="token instruction"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token instruction">                   xterm &amp;&amp; </span><span class="token instruction operator">\</span><span class="token instruction"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token instruction">    rm -rf /var/cache /var/log/dnf* /var/log/yum.*</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Supervisord setup the launch of the VNC server and the Window manager</p><div class="language-docker codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-docker codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#F8F8F2"><span class="token instruction keyword" style="color:rgb(189, 147, 249);font-style:italic">COPY</span><span class="token instruction"> supervisord.conf /etc/supervisord.conf</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>A custom theme for fluxbox:</p><div class="language-docker codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-docker codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#F8F8F2"><span class="token instruction keyword" style="color:rgb(189, 147, 249);font-style:italic">COPY</span><span class="token instruction"> fluxbox /usr/share/fluxbox/init</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then we need a special configuration to allow to have Podman working inside the container</p><p>We add the <code>podman-desktop</code> user with correct range on subuid and subgid when running containers. I used the <a href="https://github.com/containers/podman/blob/main/docs/tutorials/rootless_tutorial.md#etcsubuid-and-etcsubgid-configuration" target="_blank" rel="noopener noreferrer">tutorial</a>.</p><div class="language-docker codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-docker codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#F8F8F2"><span class="token instruction keyword" style="color:rgb(189, 147, 249);font-style:italic">RUN</span><span class="token instruction"> useradd -u 1000 podman-desktop &amp;&amp; echo podman-desktop:10000:5000 &gt; /etc/subuid &amp;&amp; echo podman-desktop:10000:5000 &gt; /etc/subgid</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then use some default configuration files</p><div class="language-docker codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-docker codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># initialize conf files</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token instruction keyword" style="color:rgb(189, 147, 249);font-style:italic">ADD</span><span class="token instruction"> https://raw.githubusercontent.com/containers/libpod/master/contrib/podmanimage/stable/containers.conf /etc/containers/containers.conf</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token instruction keyword" style="color:rgb(189, 147, 249);font-style:italic">ADD</span><span class="token instruction"> https://raw.githubusercontent.com/containers/libpod/master/contrib/podmanimage/stable/podman-containers.conf /home/podman-desktop/.config/containers/containers.conf</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>and make sure that all permissions are correct following the guide <a href="https://www.redhat.com/sysadmin/podman-inside-container" target="_blank" rel="noopener noreferrer">https://www.redhat.com/sysadmin/podman-inside-container</a></p><div class="language-docker codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-docker codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># set permissions</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token instruction keyword" style="color:rgb(189, 147, 249);font-style:italic">RUN</span><span class="token instruction"> chown podman-desktop:podman-desktop -R /home/podman-desktop &amp;&amp; chmod 644 /etc/containers/containers.conf &amp;&amp; </span><span class="token instruction operator">\</span><span class="token instruction"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token instruction">    mkdir -p /var/lib/shared/overlay-images /var/lib/shared/overlay-layers /var/lib/shared/vfs-images /var/lib/shared/vfs-layers; touch /var/lib/shared/overlay-images/images.lock; touch /var/lib/shared/overlay-layers/layers.lock; touch /var/lib/shared/vfs-images/images.lock; touch /var/lib/shared/vfs-layers/layers.lock &amp;&amp; </span><span class="token instruction operator">\</span><span class="token instruction"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token instruction">    mkdir -p /run/user/1000 &amp;&amp; chown podman-desktop:podman-desktop /run/user/1000</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>plus define an empty user namespace.</p><div class="language-docker codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-docker codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#F8F8F2"><span class="token instruction keyword" style="color:rgb(189, 147, 249);font-style:italic">ENV</span><span class="token instruction"> _CONTAINERS_USERNS_CONFIGURED=</span><span class="token instruction string" style="color:rgb(255, 121, 198)">""</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Make sure Podman will create the socket in an expected directory:</p><div class="codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-text codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#F8F8F2"><span class="token plain"># socket path for podman</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">ENV XDG_RUNTIME_DIR=/run/user/1000</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>OK ! we have a custom Containerfile providing all the tools to build and run Podman Desktop (using VNC for the display), run Podman and run Electron.</p><p>The current file is available at <a href="https://github.com/containers/podman-desktop/blob/main/.devcontainer/.parent/Containerfile" target="_blank" rel="noopener noreferrer">https://github.com/containers/podman-desktop/blob/main/.devcontainer/.parent/Containerfile</a></p><p>Let's configure the DevContainer.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="configure-the-devcontainer-using-devcontainerjson">Configure the DevContainer using devcontainer.json<a class="hash-link" href="#configure-the-devcontainer-using-devcontainerjson" title="Direct link to heading">​</a></h2><p>DevContainer definition is stored at <code>.devcontainer/devcontainer.json</code> file.</p><p>We need to reuse the image of the previous step. For that let's use the build section of the <code>devcontainer.json</code> file.</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#F8F8F2"><span class="token property">"build"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">"dockerfile"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Containerfile"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In order to avoid to redo all the build steps each time we open a workspace using this dev container, we published the image to quay.io at <a href="https://quay.io/repository/podman-desktop/devcontainer-parent?tab=tags&amp;tag=next" target="_blank" rel="noopener noreferrer">quay.io/podman-desktop/devcontainer-parent:next
</a>. This parent image is not changing much so it's better to use is as a parent one.</p><p>Inside <code>.devcontainer</code> directory there is a <code>.parent</code> directory with everything related to the parent image.</p><p>And in the <code>.devcontainer/Containerfile</code> file we reference this image</p><div class="language-docker codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-docker codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#F8F8F2"><span class="token instruction keyword" style="color:rgb(189, 147, 249);font-style:italic">FROM</span><span class="token instruction"> quay.io/podman-desktop/devcontainer-parent:next</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>By default, we will be <code>root</code> in the container and this is probably not what we expect. Let's change that.</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#F8F8F2"><span class="token property">"containerUser"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"podman-desktop"</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Some Visual Studio Code extensions are nice to use and we can add them</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">"extensions"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"svelte.svelte-vscode"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"bradlc.vscode-tailwindcss"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then here is the tricky part, how to run our container allowing to run again inside the container some containers with podman.</p><p>We specify the arguments to make it possible. It's possible to use <code>--privileged</code> flag but I prefer to list the subset of permissions.
Using <code>--privileged</code> we don't really know what are the privilege that are required while specifying all of them, people are aware of what is granted/denied.</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#F8F8F2"><span class="token property">"runArgs"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"--cap-add=sys_admin"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"--security-opt"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"seccomp=unconfined"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"--device"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"/dev/fuse"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"--security-opt"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"label=disable"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"--security-opt"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"apparmor=unconfined"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Source code of Podman Desktop needs to be editable within the DevContainer so it needs to be mounted.</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#F8F8F2"><span class="token property">"workspaceMount"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"source=${localWorkspaceFolder},target=/workspace,type=bind"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token property">"workspaceFolder"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"/workspace"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then we need a command to build Podman Desktop.</p><p>For that, we use <code>onCreateCommand</code> hook with a custom command</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#F8F8F2"><span class="token property">"onCreateCommand"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"${containerWorkspaceFolder}/.devcontainer/onCreateCommand.sh"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>and in the <code>.devcontainer</code> folder the <code>onCreateCommand.sh</code> script is the following</p><div class="language-shell codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-shell codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#F8F8F2"><span class="token shebang important">#!/bin/sh</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">yarn</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">MODE</span><span class="token operator">=</span><span class="token plain">production </span><span class="token function" style="color:rgb(80, 250, 123)">yarn</span><span class="token plain"> run build </span><span class="token operator">&amp;&amp;</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">yarn</span><span class="token plain"> run electron-builder build --linux --dir --config .electron-builder.config.js</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Two instructions:</p><ol><li>Fetch all Node.js dependencies.</li><li>build Podman Desktop in the <code>dist</code> folder using <code>Linux</code> as target Operating System.</li></ol><p>After the start of the container, how to launch Podman Desktop, the website and VNC, etc ?</p><p>Just use <code>postStartCommand</code> hook.</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#F8F8F2"><span class="token property">"postStartCommand"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"${containerWorkspaceFolder}/.devcontainer/postStartCommand.sh"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>and in the <code>.devcontainer</code> folder the <code>postStartCommand.sh</code> script is the following:</p><div class="language-shell codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-shell codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#F8F8F2"><span class="token shebang important">#!/bin/sh</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Start all services</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">/usr/bin/supervisord -c /etc/supervisord.conf </span><span class="token operator">&amp;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># wait X server to be ready or after 2mn exit</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">echo</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Waiting for X server to be ready"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">timeout</span><span class="token plain"> </span><span class="token number">120</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">bash</span><span class="token plain"> -c </span><span class="token string" style="color:rgb(255, 121, 198)">'until xdpyinfo -display :0 &amp;&gt; /dev/null; do printf "."; sleep 1; done'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># launch podman desktop</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">echo</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Launching Podman Desktop"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> dist/linux-unpacked/</span><span class="token operator">&amp;&amp;</span><span class="token plain"> ./podman-desktop </span><span class="token operator">&amp;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Launch the 9000 redirect after 20 seconds</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">sleep</span><span class="token plain"> </span><span class="token number">20</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">websockify --web</span><span class="token operator">=</span><span class="token plain">/usr/share/novnc localhost:9000 localhost:5900 </span><span class="token operator">&amp;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># launch the website rendering</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">echo</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Launching Website"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> website </span><span class="token operator">&amp;&amp;</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">yarn</span><span class="token plain"> start</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>It starts VNC and noVNC, start precompiled Podman Desktop and start the documentation rendering.</p><p>It is not launching the Watch mode/development mode of Podman Desktop as it requires a container having more than 8GB of memory.</p><p>Picking up a larger instace with for example 16GB, it's possible to use development mode.</p><p>Of course, to make VNC happy, we need to specify the <code>DISPLAY</code> environment variable.</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#F8F8F2"><span class="token property">"remoteEnv"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">"DISPLAY"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">":0"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>When the DevContainer is fully available, we want to have a way to quickly open the <code>Website rendering URL</code> and <code>noVNC</code></p><p>Let's tweak the <code>devcontainer.json</code> file by adding the <code>portsAttributes</code> section</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#F8F8F2"><span class="token property">"portsAttributes"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">"9000"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token property">"label"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"vnc"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token property">"onAutoForward"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"openPreview"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">"3000"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token property">"label"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"website"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>After all post-creation steps, the <code>Preview</code> browser inside the VS Code editor will open a window to VNC. And another port (<code>3000</code>) is flagged for the website.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="using-the-devcontainerjson-on-github-codespace">Using the DevContainer.json on Github Codespace<a class="hash-link" href="#using-the-devcontainerjson-on-github-codespace" title="Direct link to heading">​</a></h2><p>As a user, opening a workspace with all what we configured is done using a single click.</p><p>Go to <a href="https://github.com/containers/podman-desktop" target="_blank" rel="noopener noreferrer">https://github.com/containers/podman-desktop</a> then click on the <code>&lt; &gt; Code</code> dropdown and click on <code>Create codespace on main</code> button.</p><p><img loading="lazy" alt="Open Codespace" src="/assets/images/codespaces-click-repository-22eb251ecc45a2b29952fe5983e16238.png" width="1240" height="617" class="img_SS3x"></p><p>Once you click on the button, the codespace is setting up:</p><p><img loading="lazy" alt="Preparing Codepace" src="/assets/images/codespaces-preparing-codespace-3121417aa9d8947b8f5566bf39478961.png" width="754" height="587" class="img_SS3x"></p><p>After few minutes, as there is not yet <a href="https://docs.github.com/en/codespaces/prebuilding-your-codespaces/about-github-codespaces-prebuilds" target="_blank" rel="noopener noreferrer">prebuilt codespaces</a>, the codespace is opening.</p><p>The simple Browser displays the noVNC window:
<img loading="lazy" alt="Opening Codespace" src="/assets/images/codespaces-open-novnc-ec3f30d836eb7af5750498a833d37184.png" width="2051" height="1066" class="img_SS3x"></p><p>Click on the connect button. Then on the terminal you can enter <code>podman run quay.io/podman/hello</code> and the container is detected in Podman Desktop.
<img loading="lazy" alt="Testing Codespace" src="/assets/images/codespaces-testing-podman-desktop-3210aa766f273a52253d27cb4e7ef782.png" width="2051" height="1066" class="img_SS3x"></p><p>It's also possible using the port widget to get on <code>3000</code> port by clicking on the world icon a preview of the website in another tab. Changing source code of the website will refresh the content of the window.</p><p>Depending on the usecase, it's also possible to open documentation in the preview browser.</p><p><img loading="lazy" alt="Edit website Codespace" src="/assets/images/codespaces-edit-website-d1f2a645f97209e453bc72cadafa0b54.png" width="2051" height="1066" class="img_SS3x"></p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="conclusion">Conclusion<a class="hash-link" href="#conclusion" title="Direct link to heading">​</a></h2><p>The DevContainer image for Podman Desktop is recent so it'll probably evolve over time by adding new capabilities but it allows you to easily build/run/experiment and <strong>contribute</strong> to the tool or the website.</p>]]></content>
        <author>
            <name>Florent Benoit</name>
            <uri>https://github.com/benoitf</uri>
        </author>
        <category label="podman-desktop" term="podman-desktop"/>
        <category label="devcontainer" term="devcontainer"/>
        <category label="codespaces" term="codespaces"/>
    </entry>
</feed>